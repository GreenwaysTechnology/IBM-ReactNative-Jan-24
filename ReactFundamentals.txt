				 React fundamentals
.....................................................................................

What is React?

  React is javascript lib for building user interface 
  React is  java script lib like jquery,framework like angular.

What is User interface application?
 
  The user where he interacts , those applications are called user interface applications.

Eg:
  Desktop applications
     if you want to interact with os, shell is primary user interface
     shell in windows, command,powershell,explorer 

  Web Browser:
     It is one of the application software, acts as user interface for web applications
 
 Hand Held devices
  =>Mobile applications
  =>Watch
  =>Tabs
  =>TV
 etc..

.....................................................................................
				Types of web app
.....................................................................................

1.Static Web apps -  1989 to 1995
    built at server end,accessed by clients using browser
    HTML Pages are primary output.

2.Dynamic content web apps - 1996 to till date
    built at server end, access by clients using browser
eg:
  JEE(Servlets,jsp)
  Asp.net
  PHP
 etc.....

3.Web Services -1998 to till
    Data driven apps
     built at server end, accessed by clients  such  as mobiles, client side browser apps.
 SOAP - XML based web service
 RESTFull -  Different format based web service - JSON,XML,PDF....

....................................................................................
			  Client Side Web apps

1.SPA
Single Page Web Apps -  2007 to till date
   built at client side,accessed by clients browsers.
   built using javascript,html 5,css 3 

.....................................................................................
			 React and Web Stack
....................................................................................

React was created to build SPA Web apps by face book at 2013.
"React is modern SPA lib created by face book based on "Flux Design Pattern"
.....................................................................................

Architecture for libs and frameworks:

Plain JS
			 Application(dom) -plain js
			     |
			 Javascript Engine
			      |
			  Browser Engine




Framework/lib
			 Application(JQuery)
			     |
		       ---------------------------
			  JQuery Engine	------javascript programming		
                       -------------------------------
			      |
			 Javascript Engine -C/C++
			      |
			  Browser 

What is jquery engine?
  Jquery engine is also javascript program.


React


		       Application(React)
			     |
		       ---------------------------
	              React Engine :React fiber-->React 16 on wards		
                      ---------------------------------
			      |
			 Javascript Engine
			      |
			  Browser Engine


React Engine itself is javascript

.....................................................................................
			  React Echo system
....................................................................................

Where is react used? What type of apps u can build using react.

React is every where from building browser based apps , mobile apps,server side web apps.
What ever type of app you build "React core" remains same.

React can be used to build application for 
........................................
1.browsers : Desktop -  Reactjs - SPA
2.Mobile Apps : React Native
3.Server side Apps: "Next.js"

face book is working on many futures projects related to react
4.React VR : Virtual Reality.
5.React Car : For car applications
6.React TV  : React for TV.
7.React IOT : any devices
...................................................................................
			   React core 
..................................................................................
React apps are written using a language called "JSX"

JSX language features are same but its "mark up" syntax would be different.

For Browser JSX markup would be "HTML"
For Mobile JSX markup would be "Mobile Elements"
.....................................................................................
React and Browser:
..................

Project setup:
..............
npx create-react-app my-app

Folder Structure

my-app
 |
 node_modules
 package.json
 package-lock.json
 public 
 src
 readme.md


node_modules
  It is folder contains all libs files and folders downloaded from internet.
  React lib has been downloaded and kept inside this folder only.

package.json
   Every javascript project(it can be any js project), has package.json file  
   This file contains information about the project

Basic information:
 ->Name of the application "name" :"myapp"
 ->version of the application "version": "1.0.0"
 ->dependencies
     libs  required for dev ,testing, production
    you can understand what version of lib is used in the current project
 ->scripts
     scripts contains information about how to start dev server,testing,production build.

public 
  index.html
  This is entry file in react application.
  without this file we cant start the application

src
 |
 index.js
  App.js
 This folder contains application code files.

readme.md
   this is documentation file

how to run the project?
 npm start
....................................................................................
				DOM

java script was created to do DOM programming.

What is DOM?
  IT is spec, for building dynamic html.

According to DOM Spec, every html element is object. called dom object.

<h1> ---inside javascript h1 is object.

We build user interface based on objects, which forms tree called "object tree"- DOM Tree.

HTML Tree
 <div>
    <div>
	<div>
	    <span>This is dom</span>
	</div>
   </div>
 </div>

Object tree or dom tree
   
   div -node-object
    |
    div
     |
     div
      |
      span

In all ui frameworks, like react,angular,vue js the same tree is represented called "Component tree".

What is Component?
   Object which represents an ui element or elements.

In React and React native we create components.
.....................................................................................

Component Creations:
 In React , we use "JSX" language to create compoents.

JSX is more declartive programming.

React = {markup + js}

markup =html for browsers , mobile markup for mobile,tv...

Component = JSX = {markup + js}

How to write first component?
//write first component.
import ReactDOM from "react-dom/client"

//component declaration
const Welcome = <h1>Hello!</h1>

//insert Welcome to into root element
const rootElement = ReactDOM.createRoot(document.getElementById('root'))
rootElement.render(Welcome)

How to create Components in react?

We have three patterns.

1.Variable Pattern
2.function pattern
3.ES 6 class Pattern


1.Variable Pattern

//write first component.
import ReactDOM from "react-dom/client"

//variable Pattern
const Welcome = <h1>Hello!</h1>

//insert Welcome to into root element
const rootElement = ReactDOM.createRoot(document.getElementById('root'))
rootElement.render(Welcome)


2.functions pattern
import ReactDOM from "react-dom/client"


//es 5 function 
// function Welcome() {
//     //must return jsx code 
//     return <h1>Hello!!</h1>
// }
//es 6 arrow function 
// const Welcome = () => {
//     return <h1>Welcome</h1>
// }
const Welcome = () => <h1>Welcome</h1>


const rootElement = ReactDOM.createRoot(document.getElementById('root'))

//imperative way:
// rootElement.render(Welcome())
//declarative syntax:
// rootElement.render(<Welcome></Welcome>)
rootElement.render(<Welcome />)

classes:
 Note: classes are not recommended,only functional components are recommended.
we will dicuss why functional components are good.

import ReactDOM from "react-dom/client"
import React from "react"

class Welcome extends React.Component {
    //override method called "render" where we can write jsx code 
    render() {
        return <h1>Welcome!!</h1>
    }
}

const rootElement = ReactDOM.createRoot(document.getElementById('root'))

rootElement.render(<Welcome />)
.....................................................................................
...................................................................................
			  JSX


JSX - Javascript and XML

What is JSX?
 JSX is dsl language to create user interfaces

What is relationship with XML?

 Inside JSX , we write javascript code and HTML code only not xml code.

Why the term XML is used?

 When we write JSX code, we need stable mark up standards.

You know very well HTML has weak parser  that means 
 <h1>hello
when run the code , the html parser does not stop rendering hello, it never throws any error.

in order to avoid instability code inside jsx during compilation, JSX team adopted XML Parser rules, since XML parser has strong parser

Basic XML  rules:

1.every opened element must be closed
  <h1>Hello</h1>
  <Welcome></Welcome>
 some elements may not have closing tag
  <img /> : image element has no child elements : self closing. 


import ReactDOM from "react-dom/client"
import React from "react"

const Welcome = () => {
    return <h1>Hello
}

const rootElement = ReactDOM.createRoot(document.getElementById('root'))

rootElement.render(<Welcome />)

2. In xml you must have one single root element.
  all elements must be organized under single root element.

 <h1>Welcome to React</h1>
 <p>Path finder</p>
 <h1>Welcome to React</h1>
 <p>Path finder</p>

In html what can be root element
 <div>,<span>,all html 5 layout elements header,footer,section,aside...

import ReactDOM from "react-dom/client"
import React from "react"

// const Welcome = () => {
//     return <h1>Hello</h1>
//             <span>test</span>
// }

const Welcome = () => {
    return <div>
        <h1>Hello</h1>
        <span>test</span>
    </div>
}

const rootElement = ReactDOM.createRoot(document.getElementById('root'))

rootElement.render(<Welcome />)






